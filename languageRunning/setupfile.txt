import process, { argv } from "process";
import { parse } from "./parse.mjs";
import fs from "fs";
import path from "node:path";
import glob from "glob";
import { sleep } from "suzufunctions";

var inputFilesDir = "";
var outputFileDir = "";
var inputFiles = [];


for (let i = 0; process.argv.length; i++) {
    if (argv[i] === "--input") inputFilesDir = argv[i + 1];
    if (argv[i] === "--output") outputFileDir = argv[i + 1];
    if (argv[i] === "--setup") {
        if(argv[i + 1] != "--y") {
           console.log("If you have any thing that you had imported, it will be removed from the package.json for the setup! To confirm run the command again with --y after --setup");
           process.exit(1);
        }
        setup();
        process.exit(1);
    }

    if (argv[i] === "--help") {
        help();
        process.exit(1);
    }
    if (!process.argv[i]) break;
    if (inputFilesDir && outputFileDir) break;
}

console.log("Starting interpretor..., this might take a while...");

if (!inputFilesDir || !outputFileDir) {
    console.log("No input or output file specified (Specify them by --input (folderPath) and --output (folderPath)");
    process.exit(1);
}

// fs.readdirSync(inputFilesDir).forEach(file => {
//     inputFiles.push(file);
// });

// options is optional
await glob(inputFilesDir + "**/*.suzu", function (er, files) {
    console.log(files);
    inputFiles = files;
    console.log(inputFiles);
});

while (inputFiles.length === 0) {
    await sleep(100);
}
console.log(inputFiles);

for (let i = 0; i < inputFiles.length; i++) {

    var filePath = path.dirname(inputFiles[i]) + "/" + path.basename(inputFiles[i]).replace(".suzu", "") + `.mjs`;

    filePath = filePath.replace(`${inputFilesDir}`, `${outputFileDir}`);

    parse(`${inputFiles[i]}`, filePath);
}


function setup() {
    console.log("Setting up...");
    console.log("Base file input and output directories are going to be : ./src/ and ./dist/");

    if (!fs.existsSync("./src")) fs.mkdirSync("./src");
    if (!fs.existsSync("./dist")) fs.mkdirSync("./dist");

    fs.writeFileSync("./src/index.suzu", "//?When running the starter program, run npm run start since windows need to be ran as qode in the package.json//? (To read this, turn on word wrap. You can just get rid of this) this file has automatically been generated by the suzu interpretor!\n\n//!Currently the language is WIP so some things might not work!\n\n//?The modifications so far is that you need to specify variable types, requires semicolons, and the code can auto generate a window, mineflayer bot, and discord client for you\n\n//?If you are wondering about variable names, first label created by label() is named label (Label takes 3 arguments for the rest, text, css, and then name), window from window() is named win, takes 2 inputs (width, heigh)\n\n //?Mineflayer bot is called bot created by createbot() (6 arguments, username, password, auth, host, version, and then if you are running the sbdoggos bot put true, otherwise false), and discord client is called client (takes 1 argument, token).\n\n//?Because it doesnt have a extension yet, my code will not have autocompletion, but if you are worried that something doesnt work just do it in javascript, the code will send the base code into the mjs files in the end if it is not recognised. If you want to use base js, type in 'use js' on the first line. You can import stuff while typing in .suzu, it auto replaces to .mjs, have fun!\n\n\n\nwindow(200, 600);\nlabel('Hello world!');");

    fs.writeFileSync("./src/bots.suzu", "//!The createClient will not work if you do not put in a token...\n//?If you want information on the laguage got to ./index.suzu or do node . --help\n\n\ncreateBot('', '', '', '', '', false);\n\ncreateClient('token');\n");
    console.log("Done setting up!");
}

function help() {
    console.log("Currently the language is WIP so some things might not work!\n\n?The modifications so far is that you need to specify variable types, requires semicolons, and the code can auto generate a window, mineflayer bot, and discord client for you\n\n?If you are wondering about variable names, first label created by label() is named label (Label takes 3 arguments for the rest, text, css, and then name), window from window() is named win, takes 2 inputs (width, heigh)\n\n ?Mineflayer bot is called bot created by createbot() (6 arguments, username, password, auth, host, version, and then if you are running the sbdoggos bot put true, otherwise false), and discord client is called client (takes 1 argument, token).\n\n?Because it doesnt have a extension yet, my code will not have autocompletion, but if you are worried that something doesnt work just do it in javascript, the code will send the base code into the mjs files in the end if it is not recognised. If you want to use base js, type in 'use js' on the first line. You can import stuff while typing in .suzu, it auto replaces to .mjs, have fun!");
}